#nullable enable
using System;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.InputSystem;

namespace UnityExtended.Core.Types {
    /// <summary>
    /// Used to cache and get single instances of classes generated by Input System package.
    /// </summary>
    public static class InputSingletonsManager {
        private static Dictionary<Type, IInputActionCollection2>? instanceKeyedByType;

        [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
        public static void Init() {
            if (instanceKeyedByType != null) {
                foreach (var value in instanceKeyedByType.Values) {
                    value.Disable();
                    ((IDisposable)value).Dispose();
                } 
            }

            instanceKeyedByType = new();
        }

        /// <summary>
        /// Gets a single initialized instance of a class generated by Input System package.
        /// </summary>
        /// <typeparam name="T">Type of class generated by Input System.</typeparam>
        /// <returns>Instance.</returns>
        public static T GetInstance<T>() where T : IInputActionCollection2, new() {
            if (instanceKeyedByType!.TryGetValue(typeof(T), out IInputActionCollection2 instance)) {
                return (T)instance;
            } else {
                T newInstance = new T();
                instanceKeyedByType.Add(typeof(T), newInstance);
                newInstance.Enable();

                return newInstance;
            }
        }
    }
}
